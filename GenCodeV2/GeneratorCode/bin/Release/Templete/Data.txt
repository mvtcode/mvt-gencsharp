using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using [namespace].Entity;
using [namespace].Services;
using [namespace].Core;

namespace [namespace].Data
{
	public class <table_name>Data
    {
		private static <table_name>Data _instance;
        public static <table_name>Data instance
        {
            get { return _instance ?? (_instance = new <table_name>Data()); }
        }
		
        public int Add(<table_name>Info info)
        {
			SqlParameter[] param = {
			    [column_name]
		   };
            return int.Parse(DataHelper.ExecuteScalar(Config.ConnectString, "usp_<table_name>_Add", param).ToString());           
        }
        
        public int Update(<table_name>Info info)
        {
			SqlParameter[] param = {
									   #primakey1#,[column_name]
								   };
            return DataHelper.ExecuteNonQuery(Config.ConnectString, "usp_<table_name>_Update", param);    
        }


        public int Delete(int id)
        {
            SqlParameter[] param = {
									   #primakey#
								   };
            return DataHelper.ExecuteNonQuery(Config.ConnectString, "usp_<table_name>_Delete", param);   
        }

        public <table_name>Info GetInfo(int id)
        {
            <table_name>Info info = null;
			SqlParameter[] param = {
									   #primakey#
								   };
            var r = DataHelper.ExecuteReader(Config.ConnectString, "usp_<table_name>_GetById", param);
			if (r != null)
			{
				info = new <table_name>Info();
				while (r.Read())
				{
					info = FillData(r);
				}
				r.Close();
                r.Dispose();
			}
			return info;
        }
		
		public List<<table_name>Info> GetAll()
        {
            List<<table_name>Info> list = null;
            var r = DataHelper.ExecuteReader(Config.ConnectString, "usp_<table_name>_GetAll");
            if (r != null)
            {
                list = new List<<table_name>Info>();
                while (r.Read())
                {
					List.Add(FillData(r));
                }
                r.Close();
                r.Dispose();
            }

            total = t;
            return list;
        }

        public List<<table_name>Info> GetList(int pageIndex, int pageSize, out int total)
        {
            List<<table_name>Info> list = null;
            var t = 0;
            SqlParameter[] param = {
                                       new SqlParameter("@pageIndex",pageIndex),
                                       new SqlParameter("@pageSize",pageSize),
                                       new SqlParameter("@totalrow",DbType.Int32){Direction = ParameterDirection.Output}
                                   };
            SqlCommand comx;
            var r = DataHelper.ExecuteReader(Config.ConnectString, "usp_<table_name>_GetList", param, out comx);
            if (r != null)
            {
                list = new List<<table_name>Info>();
                while (r.Read())
                {
					List.Add(FillData(r));
                }
                r.Close();
                r.Dispose();
                t = int.Parse(comx.Parameters[2].Value.ToString());
            }

            total = t;
            return list;
        }
		
		private <table_name>Info FillData(IDataReader r)
        {
            <table_name>Info info = new <table_name>Info();
            <column_name>
            return info;

        }
    }
}